---
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getAllTaxonomy, getTaxonomy } from "@/lib/taxonomyParser.astro";
import { slugSelector, supportedLang } from "@/lib/utils/languageParser";
import { humanize } from "@/lib/utils/textConverter";
import PageHeader from "@/partials/PageHeader.astro";
import type { ContentEntryMap } from "astro:content";
const { default_language } = config.settings;

let { lang, slug } = Astro.params;

if (!lang) {
  lang = default_language;
}
const CATEGORIES_FOLDER = "categories";
const langCollection: keyof ContentEntryMap = lang as keyof ContentEntryMap;

const allCategories = await getAllTaxonomy(langCollection, CATEGORIES_FOLDER);
const categories = await getTaxonomy(langCollection, CATEGORIES_FOLDER);

const totalPages: number = Math.ceil(
  categories.length / config.settings.pagination
);

const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastCategory = currentPage * config.settings.pagination;
const indexOfFirstCategory = indexOfLastCategory - config.settings.pagination;
const currentCategories = categories.slice(indexOfFirstCategory, indexOfLastCategory);

export async function getStaticPaths() {
  const CATEGORIES_FOLDER = "categories";

  const paths = await Promise.all(
    supportedLang.map(async (lang) => {
      const langCollection: keyof ContentEntryMap =
        lang as keyof ContentEntryMap;
      const categories = await getAllTaxonomy(langCollection, CATEGORIES_FOLDER);
      const totalPages = Math.ceil(categories.length / config.settings.pagination);
      const langString = lang.toString();
      const langPaths = [];

      for (let i = 1; i < totalPages; i++) {
        langPaths.push({
          params: {
            lang: langString || undefined,
            slug: (i + 1).toString(),
          },
        });
      }

      return langPaths;
    })
  );

  return paths.flat();
}
---

<Base title={"Tags"}>
  <PageHeader title={"Tags"} />
  <section class="section">
    <div class="container text-center">
      <ul class="mb-10 inline-block">
        {
          currentCategories.map((category: string) => {
            const count = allCategories.filter((c) => c === category).length;
            return (
              <li class="inline-block m-2">
                <a
                  href={slugSelector(`/categories/${category}`, lang)}
                  class="btn btn-primary bg-white  dark:bg-black text-text dark:text-darkmode-text font-normal border-none box-shadow duration-200 hover:bg-primary hover:text-white btn-sm mr-1"
                >
                  {humanize(category)}{" "}
                  <span class="ml-2 rounded bg-body dark:bg-darkmode-body px-2 text-text-dark dark:text-darkmode-text-dark border border-primary">
                    {count}
                  </span>
                </a>
              </li>
            );
          })
        }
      </ul>
      <Pagination
        section={CATEGORIES_FOLDER}
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </section>
</Base>
